package utilities {	//This class contains utility function to use in any class	public class SUtilities	{		public static function noNeg(sub:Number):Number // if sub is less than 0, returns 0, in all other cases returns sub		{			return (sub + Math.abs(sub))/2;		}				public static function noGreater(sub:Number, comp:Number):Number // if sub is greater than comp, returns comp, in all other cases returns sub		{			return noPos(sub-comp)+comp;		}				public static function noPos(sub:Number):Number // if sub is greater than 0, returns 0, in all other cases returns sub		{			return -noNeg(-sub);		}				public static function inBounds(sub:Number, comp:Number):Number // returns 0 if sub is less than 0, comp if sub is greater than comp, and sub in all other cases		{			return noGreater(noNeg(sub),comp);		}				public static function switchedSide(v1:Number,v2a:Number,v2b:Number):Boolean //sees if value 2 (from state a to state b) has switched sides of value 1.  returns true if v2b is equal to v1		{			if(v1 == v2b)				return true;			return ((v1 - v2a > 0) != (v1 - v2b > 0));		}	}}