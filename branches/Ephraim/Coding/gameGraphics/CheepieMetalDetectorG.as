package gameGraphics {		import gameLogic.CheepieMetalDetector;		/* Encapsulates the graphical representation of a Cheepie Metal Detector with the power up possibilites for guns or knives */		public class CheepieMetalDetectorG extends MetalDetectorG {				public function CheepieMetalDetectorG(xLoc:Number, yLoc:Number) {			super(xLoc, yLoc, new CheepieMetalDetector(), new GCheepieMetalDetector());		}				//Graphical interfaces for POWERUPS:				//PRE: There has to be a guard installed.		//POST: All values are correctly set when Knife is powered up. 		//Graphical change is displayed.		//If the power up for guns is enabled, then not available		public function doPowerUpKnifeUI():void {			//TODO						CheepieMetalDetector(secCheck).doPowerUpKnife();		}		//PRE: There has to be a guard installed.		//POST: All values are correctly set when Gun is powered up. 		//Graphical change is displayed.		//If the power up for Knife is enabled, then not available		public function doPowerUpGunUI():void {			//TODO						CheepieMetalDetector(secCheck).doPowerUpGun();		}	}}