package gameGraphics {		import gameLogic.Station;		/* This class initially contains the empty (graphical) spots of a station, which by user interaction	   are filled with graphical Security check units. It also contains its logical representation.	   (A station is one(!) row of five (to six) Security Check Units.) 	*/	public class StationG extends Sprite {				//Five spots for either a graphic symbolizing an empty spot or the graphical representation of a Security Check Unit		private var spot1:Sprite;		private var spot2:Sprite;		private var spot3:Sprite;		private var spot4:Sprite;		private var spot5:Sprite;				//store it in array?		private var spots:Array = new Array(5); //contains sprites!				//logical representation of station		private var stationL:Station;				public StationG(number:int) {			stationL = new Station(number);			for (var i:int=0;i<5;i++) {				spots[i] = new GSpot();				Sprite(spots[i]).x = 0;				Sprite(spots[i]).y = 400*i;				addChild(spots[i]);			}		}				//SPECIFY WHAT THIS FUNCTION DOES!!! / SHOULD DO!!!		internal override function hittestObject(obj:DisplayObject):Boolean {			for(var i:int=0;i<spots.length;i++) {				if(Sprite(spots[i]).hittestObject(obj))					return true;			}					}				//Adds a security check unit to a specific spot and makes the original spots disappear		internal addSecurityCheckUnitG(secCheckG:SecurityCheckUnitG, num:int):void {			spots[num] = secCheckG;		}				//Removes the security check unit and replaces it by the original shape in place. 		internal removeSecurityCheckUnitG(num:int):void {			// SecurityCheckUnitG(spots[num]).destroy();			// spots[num] = original shape! 		}					}		}